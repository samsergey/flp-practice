--------------------------------------------------
Лекция 2. Типы
--------------------------------------------------

* Множества в математике
** Способы определения
   Перечислением
   Определяющей функцией
   Рекурсивно
   Алгебраически (∪, ∩, \, ×, ¬)
** Операции над элементами множеств
   Отображения
   Отношения
   Эндоморфизмы

* Типы в программировании
** Назначение 
** Системы типизации
** Способы определния типов пользователя в ООП
** Интерфейсы в ООП
   IEquatable, IEnumerable

* Типы в Haskell
** Синтаксис
   Декларация типа
   Тип функции
** Вывод типов
   вывод типов в C#

* Алгебраические типы
** Базовые типы
** Понятие суммы типов
   Bool
   Maybe
   Either
** Понятие произведения типов
   (,)
   [a]
** Единичный и пустой типы
** Алгебра типов
** Функциональный тип
** Каррирование
*** Следствие алгебраических свойств типов
*** Синтаксическая однородность
    f x = expr ≡ f = \x -> expr
    f x y = expt ≡ f x = \y -> expr ≡ f = \x -> \y -> expr
    ассоциативность аппликации и конструктора ->
*** Частичное определение  

** Конструкторы типов
   Bool
   Maybe
   []
** Сопоставление с образцом
   Bool
   Maybe
   []

* Полиморфизм
  length, reverse, 
** Программа, как доказательство теоремы
  a -> a                           id
  a -> b -> a                      const
  a -> b -> b                      const id
  (a, b) -> a                      fst
  [a] -> a                         head
  [a] -> [a]                       tail,reverse,take 5...
  [a] -> [b] -> [(a, b)]           zip
  (a -> b) -> a -> b               ($)
  (b -> c) -> (a -> b) -> a -> c   (.)
** Классы типов
   Необходимость в ограничениях 
   Обозначение
   Связь с интерфейсами
   
